import{_ as s,c as i,o as a,a4 as t}from"./chunks/framework.D1poPhlk.js";const n="/assets/echartsTragger0.Bn7nwg8c.jpg",y=JSON.parse('{"title":"","description":"","frontmatter":{"updateTime":"2023-09-19 20:15","desc":" Echarts 中同时设置 triggerEvent 与 tooltip 可能会出现奇怪的显示问题，文中给出了一个简单的解决方案并记录了 radar 雷达图组件多级数据的一个应用场景.","tags":"Echarts","outline":"deep"},"headers":[],"relativePath":"Notes/Learning/triggerEvent 踩坑记录.md","filePath":"Notes/Learning/triggerEvent 踩坑记录.md","lastUpdated":1723472907000}'),h={name:"Notes/Learning/triggerEvent 踩坑记录.md"},e=t('<h2 id="【echarts】事件触发与富文本的奇妙反应" tabindex="-1">【Echarts】事件触发与富文本的奇妙反应. <a class="header-anchor" href="#【echarts】事件触发与富文本的奇妙反应" aria-label="Permalink to &quot;【Echarts】事件触发与富文本的奇妙反应.&quot;">​</a></h2><p>在前几天使用 Echarts 的雷达图时，遇到了一个奇怪的问题，当 <code>radar</code> 设置了 <code>triggerEvent:true</code> 并且 <code>axisName</code> 使用的是富文本标签时，会出现下图中的情况.</p><p><img src="'+n+`" alt="echartsTragger0"></p><h3 id="解决方案" tabindex="-1">解决方案 <a class="header-anchor" href="#解决方案" aria-label="Permalink to &quot;解决方案&quot;">​</a></h3><p>设置 <code>radar</code> 中的 <code>tooltip:{show:false}</code>. 该设置并不会影响到数据的 <code>tooltip</code>.</p><p>部分配置代码如下:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: { </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;综合评估雷达图&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line highlighted"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tooltip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {},</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">radar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    shape</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;circle&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line highlighted"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    tooltip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: { </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">show</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    axisName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line highlighted"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        formatter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`{a|\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">item</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        rich</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#0a67ca&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        },</span></span>
<span class="line highlighted"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        triggerEvent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    indicator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">series</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [{type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;radar&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,data:[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]}]</span></span></code></pre></div><blockquote><p>解决这个问题时绕了很多弯路,当时认为是 <code>triggerEvent</code> 导致鼠标悬浮在 <code>axisName</code> 上时触发了对应的时间，于是打算利用 <code>dispatchAction</code> 去拦截，但是因为缓动动画的存在会导致抖动，随寻找到了这个方法.</p></blockquote><p>同时在此记录一下，雷达图组件一个应用场景的解决方案.</p><h3 id="多层级雷达图" tabindex="-1">多层级雷达图 <a class="header-anchor" href="#多层级雷达图" aria-label="Permalink to &quot;多层级雷达图&quot;">​</a></h3><p>需求场景如下：现在有一组树形结构的数据（多级指标），例如 A 指标下又有 B,C,D 三个指标，我们希望雷达图展示时，点击具体的指标（例如指标A），可以显示该指标的详细信息（例如B,C,D）.</p><ol><li>实现点击 <code>indicator</code> (上述的“指标”) 渲染更深层次的数据</li></ol><p>首先我们会发现直接监听点击事件是不行的，我们首先要给 <code>radar</code>下的<code>axisName</code>设置 <code>triggerEvent:true</code>.这样我们才能监听到指标的点击事件.可以参考下面的代码</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">echartsContainer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;click&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;radar&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">params</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ...相关逻辑</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>其中第二个参数是一个过滤器,即只监听 <code>radar</code> 组件触发的点击操作,可以参考官方文档 <a href="https://echarts.apache.org/zh/api.html#echartsInstance.on" target="_blank" rel="noreferrer">Documentation - Echarts</a></p><p>至于具体的逻辑实现，此处仅口述一下思路：点击指标后，要改变的地方有三个.</p><ol><li><strong>标题</strong>: 当前处于什么指标之下,不是顶级指标就显示返回符号（可以通过富文本标签设置背景图片实现）. 可以通过记录前缀链来实现</li><li><strong>指标名称</strong>: 当前指标下又有哪些细分指标. 如何变更应参考具体的数据结构,结合被点击的指标名称来实现.</li><li><strong>对应数据</strong>：细分指标的数据分别是什么.这一点和【指标名称】的获取类似.</li></ol><p>需要注意的是边界条件的处理：</p><ul><li>到了最底层再点击就直接返回</li><li>有的指标是这样的 <code>A:{B:{C,D,E}}</code> 那当我们点击指标 A 时，最好能直接显示 <code>{C,D,E}</code> 而不是只显示一个 <code>B</code>.</li></ul><ol start="2"><li>实现点击标题返回上一级指标并重新渲染</li></ol><p>同样是变更标题、指标、数据三个地方,处理方法基本一致,此处不再赘述.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">echartsContainer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;click&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;title&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ...相关逻辑</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div>`,22),l=[e];function p(k,r,E,d,o,g){return a(),i("div",null,l)}const F=s(h,[["render",p]]);export{y as __pageData,F as default};
