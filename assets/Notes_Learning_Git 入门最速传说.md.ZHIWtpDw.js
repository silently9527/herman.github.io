import{_ as s,c as i,o as a,a4 as n}from"./chunks/framework.D1poPhlk.js";const e="/assets/add-sshkey.CKXcNuHg.png",t="/assets/vscode-git.CrMc9SgC.png",y=JSON.parse('{"title":"","description":"","frontmatter":{"outline":2,"updateTime":"2024-04-19 00:11","tags":"Git/手册","desc":"掌握 Git，成为代码管理的高手！从安装到 SSH 密钥的生成，再到与 GitHub 的亲密接触，本指南带你一步步成为版本控制的大师。不仅如此，还有 VSCode 插件推荐和操作秘籍，让你的开发流程如丝般顺滑。"},"headers":[],"relativePath":"Notes/Learning/Git 入门最速传说.md","filePath":"Notes/Learning/Git 入门最速传说.md","lastUpdated":1723472907000}'),l={name:"Notes/Learning/Git 入门最速传说.md"},h=n(`<h2 id="📦-安装" tabindex="-1">📦 安装 <a class="header-anchor" href="#📦-安装" aria-label="Permalink to &quot;📦 安装&quot;">​</a></h2><p>下载地址：<a href="https://git-scm.com/downloads" target="_blank" rel="noreferrer">Git Downloads</a>，请根据自己的操作系统与机器型号选择正确的版本。</p><p>安装后，可以通过以下步骤验证是否安装成功（如果您使用的是 win 操作系统）：</p><ol><li>按下 <code>Win + R</code> 输入 <code>cmd</code> 打开终端。</li><li>在终端中运行 <code>git --version</code>，如果显示出版本信息，则说明安装成功 🎉。</li></ol><h2 id="🔒-身份认证" tabindex="-1">🔒 身份认证 <a class="header-anchor" href="#🔒-身份认证" aria-label="Permalink to &quot;🔒 身份认证&quot;">​</a></h2><p>该步骤将进行身份认证的配置，以便后续拉取与 Github 上的代码。</p><p>👉 官方文档：<a href="https://github.com/settings/keys" target="_blank" rel="noreferrer">关于 SSH - GitHub 文档</a></p><h4 id="_1-生成-ssh-密钥" tabindex="-1">1. 生成 ssh 密钥 <a class="header-anchor" href="#_1-生成-ssh-密钥" aria-label="Permalink to &quot;1. 生成 ssh 密钥&quot;">​</a></h4><p>请在终端中运行以下命令：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-keygen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ed25519</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -C</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;your_email@example.com&quot;</span></span></code></pre></div><p>你将看到如下信息（注：# 后的文本是注解，并不会在终端显示）：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Generating public/private ed25519 key pair.</span></span>
<span class="line"><span># 输入 ssh 密钥的保存路径，初次使用时建议保持默认</span></span>
<span class="line"><span>Enter file in which to save the key (/root/.ssh/id_ed25519):</span></span>
<span class="line"><span># 输入该密钥的密码，可以直接回车</span></span>
<span class="line"><span>Enter passphrase (empty for no passphrase):</span></span>
<span class="line"><span>Enter same passphrase again:</span></span></code></pre></div><p>完成后，你的识别信息将被保存在 <code>/root/.ssh/id_ed25519</code>，公钥则保存在 <code>/root/.ssh/id_ed25519.pub</code>。</p><h4 id="_2-启动-ssh-代理并添加私钥" tabindex="-1">2. 启动 ssh 代理并添加私钥 <a class="header-anchor" href="#_2-启动-ssh-代理并添加私钥" aria-label="Permalink to &quot;2. 启动 ssh 代理并添加私钥&quot;">​</a></h4><p>启动 ssh 代理并添加私钥的命令如下：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">eval</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-agent</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 该命令运行成功会显示：Agent pid xxx</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/id_ed25519</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 如果你在生成密钥时自定义了名称，记得在此处修改</span></span></code></pre></div><h4 id="_3-将公钥添加到-github-上" tabindex="-1">3. 将公钥添加到 Github 上 <a class="header-anchor" href="#_3-将公钥添加到-github-上" aria-label="Permalink to &quot;3. 将公钥添加到 Github 上&quot;">​</a></h4><p>访问 <a href="https://github.com/settings/keys" target="_blank" rel="noreferrer">GitHub SSH keys settings</a>，点击 &quot;New SSH key&quot;。</p><p><img src="`+e+`" alt="将公钥添加到 Github 上"></p><h4 id="_4-测试连接" tabindex="-1">4. 测试连接 <a class="header-anchor" href="#_4-测试连接" aria-label="Permalink to &quot;4. 测试连接&quot;">​</a></h4><p>运行以下命令测试与 Github 的连接：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -T</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@github.com</span></span></code></pre></div><p>如果成功，你将看到以下内容，出错请自行排查 💤：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>The authenticity of host &#39;github.com (20.205.243.166)&#39; can&#39;t be established.</span></span>
<span class="line"><span>ECDSA key fingerprint is SHA256:p2QAMXNIC1TJYWeIOttrVc98/R1BUFWu3/LiyKgUfQM.</span></span>
<span class="line"><span>Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span></span>
<span class="line"><span>Warning: Permanently added &#39;github.com,20.205.243.166&#39; (ECDSA) to the list of known hosts.</span></span>
<span class="line"><span>Hi ZbWeR! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</span></span></code></pre></div><h4 id="拉取代码" tabindex="-1">拉取代码 <a class="header-anchor" href="#拉取代码" aria-label="Permalink to &quot;拉取代码&quot;">​</a></h4><p>使用以下命令拉取代码到本地：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@github.com:ZbWeR/xxx.git</span></span></code></pre></div><h2 id="🛠️-vscode-插件推荐" tabindex="-1">🛠️ VSCode 插件推荐 <a class="header-anchor" href="#🛠️-vscode-插件推荐" aria-label="Permalink to &quot;🛠️ VSCode 插件推荐&quot;">​</a></h2><ol><li><strong>GitLens</strong>：悬停提示了解代码的更改及其作者，使用用户友好的编辑器可视化和配置交互式变基操作等等。</li><li><strong>Git-commit-plugin</strong>：快速生成符合规范的 commit 信息。</li></ol><h2 id="基本操作" tabindex="-1">基本操作 <a class="header-anchor" href="#基本操作" aria-label="Permalink to &quot;基本操作&quot;">​</a></h2><ul><li>查看 Git 配置：<code>git config --list</code></li><li>Git 配置用户身份：<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user.name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;xxx&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user.email</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;xxx&quot;</span></span></code></pre></div></li><li>克隆远程仓库：<code>git clone &lt;url&gt;</code></li><li>单行查看 commit 日志：<code>git log --oneline</code></li><li>从远程仓库拉取代码：<code>git pull</code> 或者 <code>git fetch</code> + <code>git rebase</code></li><li>推送到远程仓库：<code>git push</code></li></ul><h2 id="vscode-可视化操作" tabindex="-1">VSCode 可视化操作 <a class="header-anchor" href="#vscode-可视化操作" aria-label="Permalink to &quot;VSCode 可视化操作&quot;">​</a></h2><p><img src="`+t+`" alt="VSCode 可视化操作"></p><h2 id="缓存操作" tabindex="-1">缓存操作 <a class="header-anchor" href="#缓存操作" aria-label="Permalink to &quot;缓存操作&quot;">​</a></h2><ul><li>保存工作目录的修改：<code>git stash</code></li><li>恢复工作目录的修改：<code>git stash pop</code></li><li>查看缓存修改：<code>git stash list</code></li></ul><h2 id="分支操作" tabindex="-1">分支操作 <a class="header-anchor" href="#分支操作" aria-label="Permalink to &quot;分支操作&quot;">​</a></h2><ul><li>本地创建分支：<code>git checkout -b your_dev_name</code></li><li>上传远程服务：<code>git push origin your_dev_name</code></li><li>本地删除分支：<code>git branch -d your_dev_name</code></li><li>删除远程分支：<code>git push origin --delete &lt;branch_name&gt;</code></li><li>合并多个 commit：<code>git rebase -i HEAD~&lt;num&gt;</code></li></ul><h2 id="🏃‍♂️-情景模拟" tabindex="-1">🏃‍♂️ 情景模拟 <a class="header-anchor" href="#🏃‍♂️-情景模拟" aria-label="Permalink to &quot;🏃‍♂️ 情景模拟&quot;">​</a></h2><p>注意：该情景模拟建立在使用 rebase 作为更新手段的标准下。</p><h4 id="_1-新建分支进行开发" tabindex="-1">1. 新建分支进行开发 <a class="header-anchor" href="#_1-新建分支进行开发" aria-label="Permalink to &quot;1. 新建分支进行开发&quot;">​</a></h4><p>你刚刚拿到一个项目，你需要新建一个分支进行开发</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 克隆项目到本地</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ur</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建并切换到一个新的开发分支进行开发</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> your_dev_name</span></span></code></pre></div><h4 id="_2-提交代码到远程仓库并合入主分支" tabindex="-1">2. 提交代码到远程仓库并合入主分支 <a class="header-anchor" href="#_2-提交代码到远程仓库并合入主分支" aria-label="Permalink to &quot;2. 提交代码到远程仓库并合入主分支&quot;">​</a></h4><p>你的代码开发完毕，需要提交代码到远程仓库并合入主分支。</p><p>建议通过 VSCode 完成基本的暂存提交等操作，此处省略命令行操作，下面命令假设你已经完成了本地的 Commit：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 切换到主分支</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> master</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 拉取远程分支最新提交</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 切换到开发分支</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> your_dev_name</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 合并远程主分支最新提交到当前开发分支</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如果出现冲突则在 VSCode 中手动处理</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rebase</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> master</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 推送到远程仓库</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span></span></code></pre></div><h4 id="_3-紧急-bug-修复" tabindex="-1">3. 紧急 bug 修复 <a class="header-anchor" href="#_3-紧急-bug-修复" aria-label="Permalink to &quot;3. 紧急 bug 修复&quot;">​</a></h4><p>你的代码开发到一半，但是突然有紧急 bug 需要修复 🚨</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 暂存当前分支的修改</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stash</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 切换到主分支，更新代码并新建分支</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> master</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fix/xxx</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 进行 bug 修改，推送到远程仓库</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ...</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 切换到主分支，更新代码并返回原开发分支</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> master</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> your_dev_name</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 合并主分支更改并回复暂存的更改</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rebase</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> master</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pop</span></span></code></pre></div><h4 id="_4-压缩-commit-美化提交记录" tabindex="-1">4.压缩 Commit 美化提交记录 <a class="header-anchor" href="#_4-压缩-commit-美化提交记录" aria-label="Permalink to &quot;4.压缩 Commit 美化提交记录&quot;">​</a></h4><p>你的开发分支有很多次提交，有的时候（例如公司规范）需要压缩成一个提交。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 选择需要压缩的提交</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rebase</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> HEAD~</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 在 VSCode 中选择需要保留的提交</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 保存退出后会自动合并提交, 随后处理冲突</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如果你的分支已经推送到远程仓库，需要强制推送</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span></span></code></pre></div><h4 id="_5-code-review-存在问题需要修改" tabindex="-1">5. Code Review 存在问题需要修改 <a class="header-anchor" href="#_5-code-review-存在问题需要修改" aria-label="Permalink to &quot;5. Code Review 存在问题需要修改&quot;">​</a></h4><p>你的代码提交到远程仓库提交了 Pull Request ，在进行 Code Review 时发现了问题，需要修改。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --amend</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span></span></code></pre></div>`,55),p=[h];function k(d,o,r,c,g,F){return a(),i("div",null,p)}const b=s(l,[["render",k]]);export{y as __pageData,b as default};
