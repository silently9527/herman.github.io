import{_ as t,D as o,c as a,I as s,a4 as c,j as i,o as l}from"./chunks/framework.D1poPhlk.js";const T=JSON.parse('{"title":"","description":"","frontmatter":{"updateTime":"2023-09-28 09:28","desc":"互联网的大海中总有一些宝藏文章...有时候当你想写某个知识点的博客却发现已经有前辈写得相当完备...本系列将收录这些好文，并配上一点小小的读书笔记","tags":"Orz"},"headers":[],"relativePath":"Notes/Thoughts/他山之石.md","filePath":"Notes/Thoughts/他山之石.md","lastUpdated":1723472907000}'),d={name:"Notes/Thoughts/他山之石.md"},r=c("<blockquote><p>互联网的大海中总有一些宝藏文章...</p></blockquote><p>有时候当你想写某个知识点的博客却发现已经有前辈写得相当完备...</p><p>本系列将收录这些好文，并配上一点小小的读书笔记。</p><hr><p>我们通常使用媒体查询来实现响应式布局，事实上我们还可以利用 <code>@media print</code> 来设置页面打印时的 CSS 样式。与打印密切相关的样式据笔者所知共有四个：（这里简单陈述一下，具体怎么用看看 MDN 吧）</p><ol><li><code>break-after</code> 和 <code>break-before</code> 通常用于强制分页。</li><li><code>break-inside</code> 用于控制分页时同一元素内部是否中断。</li><li><code>print-color-adjust: exact;</code> 打印时精准显示背景颜色。</li></ol><p>本文看点：</p><ul><li>用于打印的 CSS 与 文档 @page 规则</li><li>如何保持打印样式与页面样式一致</li><li>如何调试打印呈现</li><li>如何阻止页面打印</li></ul>",8),n=i("hr",null,null,-1);function _(p,u,h,m,S,f){const e=o("LinkCard");return l(),a("div",null,[r,s(e,{desc:"如何设置页面打印的CSS样式 - 代码迷途 - 掘金",link:"https://juejin.cn/post/7029126309393465358"}),n])}const N=t(d,[["render",_]]);export{T as __pageData,N as default};
